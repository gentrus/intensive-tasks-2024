package com.walking.intensive.chapter2.task6;

/**
 * Реализуйте представленные ниже методы для расчета
 * НОК (наименьшее общее кратное) и НОД (наибольший общий делитель).
 *
 * <p><a href="https://github.com/KFalcon2022/intensive-tasks-2024/blob/master/README.md">Требования к оформлению</a>
 */
public class Task6 {
    public static void main(String[] args) {

    }

    /**
     * Реализуйте метод, который будет возвращать НОК для чисел, переданных параметрами.
     *
     * <p>Входные параметры - положительные целые числа.
     *
     * <p>Если входные данные некорректны - метод должен возвращать -1.
     */
    static int getLcm(int m, int n) {

        if (n <= 0 || m <= 0) {
            return -1;
        }

        if (n >= m) {
            int plus = n;

            while (n % m != 0) {
                n += plus;
            }
            return n;
        }
        int plus = m;
        while (m % n != 0) {
            m += plus;
        }

        return m;
    }


    /**
     * Реализуйте метод, который будет возвращать НОД для чисел, переданных параметрами.
     *
     * <p>Входные параметры - положительные целые числа.
     *
     * <p>Если входные данные некорректны - метод должен возвращать -1.
     */
    static int getGcd(int m, int n) {

        if (n <= 0 || m <= 0) {
            return -1;
        }
        // Находим наибольший делитель для меньшего из параметров (если первый параметр меньше второго)
        if (m <= n) {
            for (int i = m; i > 0; i--) {

                if (m % i == 0 && n % i == 0) {
                    return i;
                }
            }
        }
        for (int i = n; i > 0; i--) {
            if (n % i == 0 && m % i == 0) {
                return i;
            }
        }
        return 0;
    }

    /**
     * Реализуйте метод, который будет возвращать НОК для чисел, переданных параметрами.
     * Расчет должен производиться с помощью алгоритма Евклида
     *
     * <p>Входные параметры - положительные целые числа.
     *
     * <p>Если входные данные некорректны - метод должен возвращать -1.
     */
    static int getGcdByEuclideanAlgorithm(int m, int n) {
        if (n <= 0 || m <= 0) {
            return -1;
        }

        while (m != 0) {
            if (m >= n) {
                m -= n;
            } else {
                n -= m;
            }
        }
        return n;
    }
}




